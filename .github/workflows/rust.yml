name: Rust CI-Cd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build
      run: cargo build --release

    - name: Archive Binaries
      run: zip -r target.zip target/release/

    - name: Upload Binaries as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: rust-binaries
        path: target.zip

    - name: Download Binaries
      id: download_binaries
      uses: actions/download-artifact@v2
      with:
        name: rust-binaries

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Setup AWS SAM
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true

    - name: Publish to AWS CodeArtifact
      run: |
        aws codeartifact create-domain-if-not-exists --domain my-domain --domain-owner 123456789012
        aws codeartifact create-repository-in-domain-if-not-exists --domain my-domain --domain-owner 123456789012 --repository my-repo
        unzip target.zip -d./ && aws codeartifact publish-distribution-version --domain my-domain --domain-owner 123456789012 --repository my-repo --version 1.0.0 --distribution-format tar.gz --input./
